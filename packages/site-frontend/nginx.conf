server {
  listen 80;
  root /usr/share/nginx/html;
  index index.html;

  location / {
    try_files $uri $uri/ /index.html;
  }

  # WebSocket proxy configuration - proxy to the same host as the apiURL
  location /socket.io/ {
    # This is needed because we don't know the exact API URL at build time
    # The browser will send requests to the same host as the frontend (using the relative path /socket.io/)
    # We need to explicitly tell the browser this is a different origin via CORS headers
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range' always;
    add_header 'Access-Control-Expose-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range' always;
    
    # Return 204 No Content for OPTIONS requests (preflight)
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      add_header 'Content-Length' 0;
      return 204;
    }

    # This is just a message to inform users that direct access is not supported
    # The actual connection should be made to the API URL from the browser
    return 400 'WebSocket connections should be made directly to the API URL specified in the runtime configuration';
  }
}