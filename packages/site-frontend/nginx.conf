server {
  listen 80;
  root /usr/share/nginx/html;
  index index.html;

  # For WebSocket connections, just set the headers correctly
  # but let the app handle the actual connection through JavaScript
  location /socket.io/ {
    # Set WebSocket headers for upgrade support
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Cross-origin headers for WebSocket support
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type' always;
    
    # Handle CORS preflight requests
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      add_header 'Content-Length' 0;
      return 204;
    }
    
    # Return a message explaining that WebSockets should be handled by the app
    return 426 'WebSocket connections are handled directly by the application. This is just a fallback response.';
  }

  location / {
    try_files $uri $uri/ /index.html;
  }
}