name: PR Checks

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'true'
          token: ${{ secrets.PIDWIN_READ_ONLY_PAT }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

# ENABLE WHEN LINTING SCRIPT IS IN PLACE
      # - name: Lint Code
      #   run: npm run lint

# ENABLE WHEN JEST TEST ARE READY
      # - name: Run Jest Tests
      #   run: npm test

      - name: Check Build React app
        run: npm run init

# ENABLE WHEN HAVE SONAR ACCOUNT
      # - name: Install SonarScanner CLI
      #   run: npm install -g sonar-scanner

      # - name: Run SonarQube Analysis
      #   env:
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   run: |
      #     sonar-scanner \
      #       -Dsonar.projectKey=my-nodejs-react-app \
      #       -Dsonar.sources=. \
      #       -Dsonar.exclusions=node_modules/**/*,coverage/**/* \
      #       -Dsonar.tests=. \
      #       -Dsonar.test.inclusions=**/*.spec.js,**/*.test.js \
      #       -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
      #       -Dsonar.login=$SONAR_TOKEN \
      #       -Dsonar.host.url=$SONAR_HOST_URL

      - name: Check building Docker image for Shared Backend
        run: |
          docker build -t pidwin/castle-backend -f ./packages/shared-backend/Dockerfile .

      - name: Check building Docker image for Front End
        run: |
          docker build -t pidwin/castle-frontend -f ./packages/site-frontend/Dockerfile .
