name: Shared Admin Backend CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "packages/shared-admin-backend/**"
      - ".github/workflows/deploy_shared_admin_be.yml"

jobs:
  build-and-push-shared-admin-backend:
    runs-on: ubuntu-latest
    environment: dev
    outputs:
      image_tag: ${{ steps.set-image-tag.outputs.image_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'true'
          token: ${{ secrets.PIDWIN_READ_ONLY_PAT }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
 
      - name: Install dependencies
        run: npm install

      - name: Build React app
        run: npm run init

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and tag Docker image
        run: |
          docker build -t pidwin/castle-admin-backend -f ./packages/shared-admin-backend/Dockerfile .
          docker tag pidwin/castle-admin-backend:latest ${{ steps.login-ecr.outputs.registry }}/pidwin/castle-admin-backend:latest

      - name: Push Docker image to ECR
        id: push_image
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/pidwin/castle-admin-backend:latest

      - name: Output ECR Image URL
        run: | 
          echo "Image pushed to ECR: ${{ steps.login-ecr.outputs.registry }}/pidwin/castle-admin-backend:latest"

      - name: Set image tag output
        id: set-image-tag
        run: |
          # Generate an image tag (for example, using a timestamp)
          IMAGE_TAG="v1.0.$(date +%s)"
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

  update-helm-chart:
    needs: build-and-push-shared-admin-backend
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Update Helm Chart with new image tag
        run: |
          IMAGE_TAG="${{ needs.build-and-push-shared-admin-backend.outputs.image_tag }}"
          echo "Updating Helm chart with tag: $IMAGE_TAG"
          # Update the image tag in the Helm values file.
          sed -i "s/tag: .*/tag: $IMAGE_TAG/" helm/shared-be/values/dev/shared_be_values.yaml
          git add helm/shared-be/values/dev/shared_be_values.yaml
          git commit -m "new_image_release: update image tag to $IMAGE_TAG [skip ci]" || echo "No changes to commit"
          git push

  deploy-dev:
    needs: update-helm-chart
    runs-on: ubuntu-latest
    environment:
      name: dev  # Configure this environment in GitHub; no manual approval required for Dev.
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials for Dev
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig for Dev
        run: aws eks update-kubeconfig --region us-east-1 --name castle-dev

      - name: Deploy to Dev (castle-backend namespace)
        run: |
          echo "Deploying to Dev environment..."
          helm upgrade --install castle-backend ./helm/shared-be/ \
            --namespace shared-admin-backend \
            --create-namespace \
            --values helm/shared-be/values/dev/shared_be_values.yaml \
            --set image.tag=${{ needs.build-and-push-shared-admin-backend.outputs.image_tag }}

  # wait-for-stage-approval:
  #   needs: deploy-dev
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: trstringer/manual-approval@v1
  #       with:
  #         secret: ${{ github.TOKEN }}
  #         approvers: csherida,civilizador
  #         minimum-approvals: 1
  #         issue-title: "Deploying to staging"
  #         issue-body: "Please approve or deny the deployment of this version"
  #         exclude-workflow-initiator-as-approver: false
  #         fail-on-denial: true
  #         additional-approved-words: ''
  #         additional-denied-words: ''

  deploy-stage:
    # needs: wait-for-stage-approval
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment:
      name: stage  # Ensure manual approval is enforced in this environment's settings.
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials for Stage
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig for Stage
        run: aws eks update-kubeconfig --region us-east-1 --name castle-dev

      - name: Deploy to Stage (stage_shared-admin-backend namespace)
        run: |
          echo "Deploying to Stage environment..."
          echo "Deploying to Dev environment..."
          helm upgrade --install castle-backend ./helm/shared-be/ \
            --namespace stage-shared-admin-backend \ 
            --create-namespace \
            --values helm/shared-be/values/stage/shared_be_values.yaml \
            --set image.tag=${{ needs.build-and-push-shared-admin-backend.outputs.image_tag }}

  wait-for-prod-approval:
    needs: deploy-stage
    runs-on: ubuntu-latest
    steps:
      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: csherida,civilizador
          minimum-approvals: 1
          issue-title: "Deploying to production"
          issue-body: "Please approve or deny the deployment of this version"
          exclude-workflow-initiator-as-approver: false
          fail-on-denial: true
          additional-approved-words: ''
          additional-denied-words: ''

  deploy-prod:
    needs: wait-for-prod-approval
    runs-on: ubuntu-latest
    environment:
      name: prod  # Ensure manual approval is enforced in this environment's settings.
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials for Prod
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.PROD_AWS_REGION }}

      - name: Update kubeconfig for Prod
        run: aws eks update-kubeconfig --name prod-cluster --region ${{ secrets.PROD_AWS_REGION }}

      - name: Deploy to Prod (prod_shared-admin-backend namespace)
        run: |
          echo "Deploying to Stage environment..."
          echo "Deploying to Dev environment..."
          helm upgrade --install castle-backend ./helm/shared-be/ \
            --namespace prod-shared-admin-backend \
            --create-namespace \
            --values helm/shared-be/values/prod/shared_be_values.yaml \
            --set image.tag=${{ needs.build-and-push-shared-admin-backend.outputs.image_tag }}