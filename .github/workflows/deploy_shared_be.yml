name: Shared Backend CI

# Ensure we can commit changes back to the repo to update values with the new image tag.  
permissions:
  contents: write

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "packages/shared-backend/**"
      - ".github/workflows/deploy_shared_be.yml"

jobs:
  build-and-push-shared-backend:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set-image-tag.outputs.image_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'true'
          token: ${{ secrets.PIDWIN_READ_ONLY_PAT }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
 
      - name: Install dependencies
        run: npm install

      - name: Build React app
        run: npm run init

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and tag Docker image
        run: |
          docker build -t pidwin/castle-backend -f ./packages/shared-backend/Dockerfile .
          docker tag pidwin/castle-backend:latest ${{ steps.login-ecr.outputs.registry }}/pidwin/castle-backend:latest

      - name: Push Docker image to ECR
        id: push_image
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/pidwin/castle-backend:latest

      - name: Output ECR Image URL
        run: | 
          echo "Image pushed to ECR: ${{ steps.login-ecr.outputs.registry }}/pidwin/castle-backend:latest"

      - name: Set image tag output
        id: set-image-tag
        run: |
          # Generate an image tag (for example, using a timestamp)
          IMAGE_TAG="v1.0.$(date +%s)"
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

  update-helm-chart:
    needs: build-and-push-shared-backend
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Update Helm Chart with new image tag
        run: |
          IMAGE_TAG="${{ needs.build-and-push-shared-backend.outputs.image_tag }}"
          echo "Updating Helm chart with tag: $IMAGE_TAG"
          # Update the image tag in the Helm values file.
          sed -i "s/tag: .*/tag: $IMAGE_TAG/" shared-admin-be/values.yaml
          git add shared-admin-be/values.yaml
          git commit -m "new_image_release: update image tag to $IMAGE_TAG [skip ci]" || echo "No changes to commit"
          git push

  deploy-dev:
    needs: update-helm-chart
    runs-on: ubuntu-latest
    environment:
      name: dev  # Configure this environment in GitHub; dev may not require manual approval.
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Deploy to Dev (shared-backend namespace)
        run: |
          echo "Deploying to Dev environment..."
          helm upgrade --install shared-admin-be ./shared-admin-be \
            --namespace shared-backend \
            --create-namespace \
            --values shared-admin-be/values.yaml \
            --set image.tag=${{ needs.build-and-push-shared-backend.outputs.image_tag }}

  deploy-stage:
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment:
      name: stage  # Set manual approval for stage in your repository's Environment settings.
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Deploy to Stage (shared-backend namespace)
        run: |
          echo "Deploying to Stage environment..."
          helm upgrade --install shared-admin-be ./shared-admin-be \
            --namespace shared-backend \
            --create-namespace \
            --values shared-admin-be/values.yaml \
            --set image.tag=${{ needs.build-and-push-shared-backend.outputs.image_tag }}

  deploy-prod:
    needs: deploy-stage
    runs-on: ubuntu-latest
    environment:
      name: prod  # Set manual approval for prod in your repository's Environment settings.
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Deploy to Prod (shared-backend namespace)
        run: |
          echo "Deploying to Prod environment..."
          helm upgrade --install shared-admin-be ./shared-admin-be \
            --namespace shared-backend \
            --create-namespace \
            --values shared-admin-be/values.yaml \
            --set image.tag=${{ needs.build-and-push-shared-backend.outputs.image_tag }}
